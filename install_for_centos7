#!/bin/bash
# The script for centos 7 minimal environment
# author: Jack
# v1.05

BASE_DIR='/usr/local/lnmp'
LOGROTATE_DIR='/etc/logrotate.d/'
SYSTEMD_DIR='/usr/lib/systemd/system/'
PROFILED_DIR='/etc/profile.d'
LOG_DIR='/data/logs'

if [ "$UID" -ne 0 ];then
	echo "must be run by root!"
	exit
fi

if [ "$#" -ne 1 ];then
	echo "Usage: $0 <package_name>"
	exit
fi

install_repo(){
if [ -z `rpm -qa | grep epel-release` ];then
	yum install epel-release -y
fi
}

install_dep(){
	yum -y install unzip wget rsync gcc gcc-c++ make autoconf libmcrypt \
	libmcrypt-devel mcrypt mhash libjpeg libjpeg-devel libpng libpng-devel \
	freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc \
	glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel \
	curl curl-devel e2fsprogs e2fsprogs-devel krb5-devel libidn libidn-devel \
	openssl openssl-devel libtool libtool-libs libevent-devel libevent openldap \
	openldap-devel openldap-clients openldap-servers libtool-ltdl libtool-ltdl-devel \
	bison bison-devel cloog-ppl ppl libmemcached-devel expat-devel gettext-devel \
	gd-devel mhash-devel pcre-devel screen boost boost-devel gperf libevent \
	libevent-devel uuid-devel libuuid libuuid-devel uuid cmake geoip geoip-devel \
	jemalloc jemalloc-devel tcl perl-ExtUtils-Embed

	if [ "$?" -eq 0 ];then
		echo "install dependent ... ok."
	else
		exit 1
	fi
}

check_is_exists()
{
if id "$1" > /dev/null 2>&1; then
	echo "$1 exists."
else
	useradd -M -s /sbin/nologin $1
fi
}

install_mysql(){
if [ ! -d "${BASE_DIR}/mysql" ];then
	if [ ! -f ./mysql-5.6.26.tar.gz ];then
		wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.26.tar.gz
	fi
	tar zxf mysql-5.6.26.tar.gz
	cd mysql-5.6.26
	cmake \
	-DCMAKE_INSTALL_PREFIX=${BASE_DIR}/mysql \
	-DMYSQL_DATADIR=/data/db/mysql/var \
	-DSYSCONFDIR=/etc \
	-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \
	-DMYSQL_TCP_PORT=3306 \
	-DDEFAULT_CHARSET=utf8 \
	-DDEFAULT_COLLATION=utf8_general_ci \
	-DEXTRA_CHARSETS=all \
	-DDOWNLOAD_BOOST=1 \
	-DWITH_BOOST=${BASE_DIR}/boost
	if [ "$?" -eq 0 ];then
		make -j 4 && make install
	fi
	check_is_exists mysql
	cp ../profile.d/mysql.sh ${PROFILED_DIR}/
	echo "${BASE_DIR}/mysql/lib" > /etc/ld.so.conf.d/mysql.conf
	ldconfig
	source ${PROFILED_DIR}/mysql.sh
	mkdir -p /data/db/mysql/var
	chown -R mysql:mysql /data/db/mysql/var
	if [ -f /etc/my.cnf ];then
		rm -rf /etc/my.cnf
	fi
	${BASE_DIR}/mysql/scripts/mysql_install_db --user=mysql --basedir=${BASE_DIR}/mysql --datadir=/data/db/mysql/var --explicit_defaults_for_times
	cp  ../init/mysqld.service  ${SYSTEMD_DIR}
	cp ../conf/my.cnf /etc/
        cp ../logrotate/mysql ${LOGROTATE_DIR}
	mkdir /data/db/mysql_binlog
	mkdir /data/db/mysql/logs
	chown -R mysql.mysql /data/db/mysql/logs
	chown -R mysql.mysql /data/db/mysql_binlog
	systemctl start mysqld.service
else
		echo "mysql directory is exist. will be quit"
		exit 0
fi
}

install_php(){
if [ -d "${BASE_DIR}/php56" ];then
	echo "php directory is exist."
	exit 0
else
	if [ ! -f ./php-5.6.12.tar.gz ];then
		wget http://cn.php.net/get/php-5.6.12.tar.gz/from/this/mirror -O php-5.6.12.tar.gz
	fi
	tar zxf php-5.6.12.tar.gz
	ln -s /usr/lib64/libldap* /usr/lib/
	ln -s /usr/lib64/libexpat* /usr/lib/
	ln -s /usr/lib64/liblber-2.4.so.2 /usr/lib/
        ln -s /usr/lib64/liblber.so /usr/lib/
	cd php-5.6.12
	./configure --prefix=${BASE_DIR}/php56 \
	--with-zlib --with-mysql=mysqlnd --with-mysqli=mysqlnd \
	--with-pdo-mysql=mysqlnd --with-jpeg-dir --with-png-dir --with-freetype-dir \
	--with-libexpat-dir --with-libxml-dir --with-gd --with-openssl --with-iconv \
	--with-gettext --with-curl --with-mhash --enable-pcntl --with-mcrypt --with-bz2 \
	--with-ldap --enable-ftp --with-ldap-sasl --enable-gd-native-ttf \
	--enable-mbstring=all --enable-xml --enable-pdo --enable-exif --enable-mbregex \
	--enable-zip --enable-soap --enable-sockets --enable-bcmath --enable-shmop \
	--enable-sysvsem --enable-sysvshm --enable-sysvmsg --enable-inline-optimization \
	--disable-xmlreader --disable-debug --disable-rpath --without-pear \
	--enable-fpm --with-fpm-user=nobody --with-fpm-group=nobody --enable-opcache

	if [ "$?" -eq 0 ];then
		make && make install
	else
		exit 1
	fi
	cp php.ini-production ${BASE_DIR}/php56/lib/php.ini
	cp -rf ../init/php-fpm.service ${SYSTEMD_DIR}
	cp ${BASE_DIR}/php56/etc/php-fpm.conf.default ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;pid = run\/php-fpm.pid/pid = run\/php-fpm.pid/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;error_log = log\/php-fpm.log/error_log = log\/php-fpm.log/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;daemonize = yes/daemonize = yes/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i "s#listen = 127.0.0.1:9000#listen = ${BASE_DIR}/php56/var/run/php-fpm.sock#" ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;listen.owner = nobody/listen.owner = nobody/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;listen.group = nobody/listen.group = nobody/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed -i 's/;pm.max_requests = 500/pm.max_requests = 300/' ${BASE_DIR}/php56/etc/php-fpm.conf
	sed '/; extension_dir = "ext"/ a\extension_dir = "'${BASE_DIR}'/php56/lib/php/extensions/no-debug-non-zts-20131226"\n\nzend_extension =opcache.so\nopcache.enable=1\nopcache.memory_consumption = 64\nopcache.interned_strings_buffer = 8\nopcache.max_accelerated_files = 4000\nopcache.revalidate_freq = 60\nopcache.fast_shutdown = 1\nopcache.enable_cli = 1\n' -i ${BASE_DIR}/php56/lib/php.ini
	sed -i 's#expose_php = On#expose_php = Off#' ${BASE_DIR}/php56/lib/php.ini
	sed -i 's#short_open_tag = Off#short_open_tag = On#' ${BASE_DIR}/php56/lib/php.ini
	sed -i 's#;cgi.fix_pathinfo=1#cgi.fix_pathinfo=0#' ${BASE_DIR}/php56/lib/php.ini
	sed -i 's#;always_populate_raw_post_data = -1#always_populate_raw_post_data = -1#' ${BASE_DIR}/php56/lib/php.ini
	systemctl start php-fpm.service
	cp -rf ../profile.d/php.sh ${PROFILED_DIR}/
	cp ../logrotate/php-fpm ${LOGROTATE_DIR}
	source ${PROFILED_DIR}/php.sh
fi
}

php_ext(){
	if [ ! -e ./igbinary-1.2.1.tgz ];then
        	wget http://pecl.php.net/get/igbinary-1.2.1.tgz
        fi
        tar zxvf igbinary-1.2.1.tgz
        cd igbinary-1.2.1
	${BASE_DIR}/php56/bin/phpize
	./configure  --enable-igbinary --with-php-config=${BASE_DIR}/php56/bin/php-config
        if [ $? -eq 0 ];then
        	make && make install && cd ..
        else
		exit 1
	fi

	if [ ! -e ./php-mongo-1.6.10.tgz ];then
		wget http://pecl.php.net/get/mongo-1.6.10.tgz -O php-mongo-1.6.10.tgz
	fi
	tar zxvf php-mongo-1.6.10.tgz
	cd mongo-1.6.10/
	${BASE_DIR}/php56/bin/phpize
	./configure --with-php-config=${BASE_DIR}/php56/bin/php-config --enable-mongo
	if [ "$?" -eq 0 ];then
		make && make install && cd ..
	else
		exit 1
	fi

	if [ ! -e ./php-redis-2.2.7.tgz ];then
		wget http://pecl.php.net/get/redis-2.2.7.tgz -O php-redis-2.2.7.tgz
	fi
	tar zxvf php-redis-2.2.7.tgz
	cd redis-2.2.7
	${BASE_DIR}/php56/bin/phpize
	./configure --with-php-config=${BASE_DIR}/php56/bin/php-config --enable-redis --enable-redis-igbinary
	if [ "$?" -eq 0 ];then
		make && make install && cd ..
	else
		exit 1
	fi

	if [ ! -e ./php-memcache-2.2.7.tgz ];then
		wget http://pecl.php.net/get/memcache-2.2.7.tgz -O php-memcache-2.2.7.tgz
	fi
	tar zxvf php-memcache-2.2.7.tgz
	cd memcache-2.2.7/
	${BASE_DIR}/php56/bin/phpize
	./configure --with-php-config=${BASE_DIR}/php56/bin/php-config  --enable-memcache
	if [ "$?" -eq 0 ];then
		make && make install && cd ..
	else
		exit 1
	fi

	sed '/opcache.enable_cli = 1/ a\[mongo]\nextension = mongo.so\n[redis]\nextension = redis.so\n[memcache]\nextension = memcache.so\n[igbinary]\nextension = igbinary.so' -i ${BASE_DIR}/php56/lib/php.ini
	systemctl restart php-fpm.service

}

install_redis(){
if [ -d ${BASE_DIR}/redis ];then
	echo "redis directory is exist."
	exit 0
else
	if [ ! -e './redis-3.2.3.tar.gz' ];then
		wget http://download.redis.io/releases/redis-3.2.3.tar.gz
	fi
	echo "install redis ..."
	tar zxvf redis-3.2.3.tar.gz
	cd redis-3.2.3
	make && make test
	if [ "$?" -eq 0 ];then
		mkdir -p ${BASE_DIR}/redis/{bin,conf,sbin,run}
		cd src
		cp redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-trib.rb mkreleasehdr.sh ${BASE_DIR}/redis/bin/
		cp redis-server ${BASE_DIR}/redis/sbin
		cd ..
		cp redis.conf ${BASE_DIR}/redis/conf/redis.conf
		mkdir -p ${LOG_DIR}/redis_logs
		mkdir -p /data/db/redis/data
		cp ../init/redis.service ${SYSTEMD_DIR}
		sed -i 's/daemonize no/daemonize yes/' ${BASE_DIR}/redis/conf/redis.conf
		sed -i "s#pidfile /var/run/redis.pid#pidfile ${BASE_DIR}/redis/run/redis_6379.pid#" ${BASE_DIR}/redis/conf/redis.conf
		sed -i 's#logfile ""#logfile "'${LOG_DIR}'/redis_logs/redis.log"#' ${BASE_DIR}/redis/conf/redis.conf
		sed -i 's#dbfilename dump.rdb#dbfilename data.rdb#' ${BASE_DIR}/redis/conf/redis.conf
		sed -i 's#dir ./#dir /data/db/redis/data#' ${BASE_DIR}/redis/conf/redis.conf
		if [ -s /etc/sysctl.conf ];then
			sed -i '$a\vm.overcommit_memory=1' /etc/sysctl.conf
			sed -i '$a\net.core.somaxconn=10000' /etc/sysctl.conf
		else
			echo -n 'vm.overcommit_memory=1' > /etc/sysctl.conf
			sed -i '$a\net.core.somaxconn=10000' /etc/sysctl.conf
		fi
		systemctl start redis.service
		cp ../profile.d/redis.sh ${PROFILED_DIR}/
		source ${PROFILED_DIR}/redis.sh
	else
		exit 1
	fi
fi
}

# mongo for centos 6.x
install_mongo(){
if [ -d "${BASE_DIR}/mongo" ];then
	echo "mongo directory is exist."
else
	echo "install mongo ..."
	if [ ! -e "./mongodb-linux-x86_64-3.0.6.tgz" ];then
		wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.6.tgz
	fi
	tar zxvf mongodb-linux-x86_64-3.0.6.tgz
	mv mongodb-linux-x86_64-3.0.6 ${BASE_DIR}/mongo
	mkdir ${BASE_DIR}/mongo/{conf,data,logs}
	cp init/mongod /etc/init.d/mongod
	chmod a+x /etc/init.d/mongod
	cp conf/mongod.conf ${BASE_DIR}/mongo/conf
	cp profile.d/mongo.sh ${PROFILED_DIR}/
	check_is_exists mongod
	chown -R mongod. ${BASE_DIR}/mongo/logs
	chown -R mongod. ${BASE_DIR}/mongo/data
	/etc/init.d/mongod start
	chkconfig --add mongod
	chkconfig mongod on
fi
}

install_jdk()
{
if [ -d "${BASE_DIR}/jdk1.7.0_79" ];then
	echo "jdk1.7.0_79 directory is exist."
	exit 0
else
	echo "install jdk now ..."
	if [ ! -e "./jdk-7u79-linux-x64.tar.gz" ];then
		echo "Please Manual Download jdk"
		exit 1
	else
		tar zxf jdk-7u79-linux-x64.tar.gz
		if [ "$?" -eq 0 ];then
			mv jdk1.7.0_79 ${BASE_DIR}/
			cp profile.d/jdk.sh ${PROFILED_DIR}/
			source ${PROFILED_DIR}/jdk.sh
		fi
	fi
fi
}

install_tomcat()
{
if [ -d "${BASE_DIR}/tomcat6" ];then
	echo "tomcat6 directory is exist."
	exit 0
else
	if [ ! -e "./apache-tomcat-6.0.47.tar.gz" ];then
		wget http://apache.tt.co.kr/tomcat/tomcat-6/v6.0.47/bin/apache-tomcat-6.0.47.tar.gz
	fi

	tar zxf apache-tomcat-6.0.47.tar.gz
	mv apache-tomcat-6.0.47 ${BASE_DIR}/tomcat6
	cp init/tomcat.service ${SYSTEMD_DIR}
	sed -i 's#CATALINA_OUT="$CATALINA_BASE"/logs/catalina.out#CATALINA_OUT=${LOG_DIR}/tomcat_logs/catalina.out#' ${BASE_DIR}/tomcat6/bin/catalina.sh
	mkdir -p ${LOG_DIR}/tomcat_logs
	cp logrotate/tomcat ${LOGROTATE_DIR}
	systemctl start tomcat.service
	if [ "$?" -eq 0 ];then
		echo "tomcat start success."
		exit 0
	else
		echo "tomcat start failed."
		exit 1
	fi
fi

}

install_nginx(){
if [ -d ${BASE_DIR}/nginx ];then
	echo "nginx directory is exist."
	exit 0
else
	if [ ! `ls ./nginx-1.8.1.tar.gz` ];then
		wget http://nginx.org/download/nginx-1.8.1.tar.gz
	fi
	tar zxvf nginx-1.8.1.tar.gz
	cd nginx-1.8.1
	./configure --prefix=${BASE_DIR}/nginx --user=nobody \
	--group=nobody --with-ld-opt=-ljemalloc --with-http_ssl_module \
	--with-http_addition_module --with-http_sub_module --with-http_dav_module \
	--with-http_flv_module --with-http_gzip_static_module --with-http_stub_status_module \
	--with-mail --with-mail_ssl_module --with-http_geoip_module \
	--with-http_realip_module

	if [ "$?" -eq 0 ];then
		make && make install
	else
		exit 1
	fi
	cp ../init/nginx.service ${SYSTEMD_DIR}nginx.service
	mv ${BASE_DIR}/nginx/conf/nginx.conf ${BASE_DIR}/nginx/conf/nginx.conf.old
	cp ../conf/nginx.conf ${BASE_DIR}/nginx/conf
	/bin/cp -rf ../conf/vhosts ${BASE_DIR}/nginx/conf/
	cp ../logrotate/nginx ${LOGROTATE_DIR}
	mkdir -p ${LOG_DIR}/nginx_logs
	systemctl start nginx.service
fi
}
install_memcached(){
	if [ -d ${BASE_DIR}/memcached ];then
		echo "memcached directory is exist."
		exit 0
	else
		if [ ! `ls ./memcached-1.4.24.tar.gz` ];then
			wget http://www.memcached.org/files/memcached-1.4.24.tar.gz
		fi
		tar zxvf memcached-1.4.24.tar.gz
		cd memcached-1.4.24
		echo "install memcache ..."
		./configure --prefix=${BASE_DIR}/memcached
		if [ "$?" -eq 0 ];then
			make && make install
		else
			exit 1
		fi
		cp ../init/memcached /etc/sysconfig/
		cp ../init/memcached.service ${SYSTEMD_DIR}
		mkdir -p ${BASE_DIR}/memcached/lock/subsys/
		mkdir ${BASE_DIR}/memcached/run
		check_is_exists memcached
		systemctl daemon-reload
		systemctl start memcached.service
	fi		
}
set_ulimit(){
	sed '/#@student        -       maxlogins       4/a\@users\tsoft\tnofile\t100001\n@users\thard\tnofile\t100002\n@root\tsoft\tnofile\t100001\n@root\thard\tnofile\t100002\n' -i /etc/security/limits.conf
	sed '/*/s/^/#/' -i /etc/security/limits.d/20-nproc.conf
	sed '/root/s/^/#/' -i /etc/security/limits.d/20-nproc.conf
	echo $'# Added by jack\n*	hard	nofile	1000000' > /etc/security/limits.d/80-nproc.conf
}


set_sysctl(){
	sed '$a\vm.swappiness = 0\nvm.overcommit_memory = 1\nnet.core.somaxconn = 512\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_fin_timeout = 30\nnet.ipv4.tcp_keepalive_time = 1200\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.ipv4.tcp_max_syn_backlog = 4096\nnet.ipv4.tcp_max_tw_buckets = 5000\nnet.ipv4.tcp_synack_retries = 2\nnet.ipv6.conf.default.disable_ipv6 = 1\nnet.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv4.conf.default.arp_announce = 2\nnet.core.wmem_max = 873200\nnet.core.rmem_max = 873200\nnet.ipv4.tcp_wmem = 8192 436600 873200\nnet.ipv4.tcp_rmem = 32768 436600 873200\nnet.ipv4.tcp_mem = 786432 1048576 1572864\nnet.ipv4.tcp_retries2 = 5\n' -i /etc/sysctl.conf
	sysctl -p
}

set_rc_local()
{
sed -i '$a\if test -f /sys/kernel/mm/transparent_hugepage/enabled; then\n    echo never > /sys/kernel/mm/transparent_hugepage/enabled\nfi\n\nif test -f /sys/kernel/mm/transparent_hugepage/defrag; then\n    echo never > /sys/kernel/mm/transparent_hugepage/defrag\nfi\n' /etc/rc.d/rc.local
}

set_ntp(){
	yum install ntp -y
	sed -i 's/server 0.centos.pool.ntp.org iburst/#server 0.centos.pool.ntp.org iburst/' /etc/ntp.conf
	sed -i 's/server 1.centos.pool.ntp.org iburst/#server 1.centos.pool.ntp.org iburst/' /etc/ntp.conf
	sed -i 's/server 2.centos.pool.ntp.org iburst/#server 2.centos.pool.ntp.org iburst/' /etc/ntp.conf
	sed -i 's/server 3.centos.pool.ntp.org iburst/#server 3.centos.pool.ntp.org iburst/' /etc/ntp.conf
	sed -i '/#server 3.centos.pool.ntp.org iburst/a\server 0.th.pool.ntp.org\nserver 1.asia.pool.ntp.org\nserver 2.asia.pool.ntp.org\n' /etc/ntp.conf
	systemctl start ntpd
	ntpdate
}

install_zabbix_agent()
{
if [ ! -e ./zabbix-3.0.4.tar.gz ];then
        wget http://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/3.0.4/zabbix-3.0.4.tar.gz
fi
if [ -d "${BASE_DIR}/zabbix" ];then
        echo "zabbix directory is exist."
	exit 0
else
        hostname=$(hostname)
	zabbix_server='10.105.51.217'
	check_is_exists zabbix
        tar zxf zabbix-3.0.4.tar.gz
        cd zabbix-3.0.4
        ./configure --prefix=${BASE_DIR}/zabbix --enable-agent && make && make install
        cp ../init/zabbix_agent.service ${SYSTEMD_DIR}
        sed -i "s/Server=127.0.0.1/Server=${zabbix_server}/" ${BASE_DIR}/zabbix/etc/zabbix_agentd.conf
        sed -i "s/ServerActive=127.0.0.1/ServerActive=${zabbix_server}/" ${BASE_DIR}/zabbix/etc/zabbix_agentd.conf
        sed -i "s/Hostname=Zabbix server/Hostname=${hostname}/" ${BASE_DIR}/zabbix/etc/zabbix_agentd.conf
	systemctl enable zabbix_agent.service
        systemctl start zabbix_agent.service
fi
}

case "$1" in
	dep)
	install_dep
	;;
	nginx)
	install_nginx
	;;
	ulimit)
	set_ulimit
	;;
	mysql)
	install_mysql
	;;
	php)
	install_php
	;;
	redis)
	install_redis
	;;
	mongo)
	install_mongo
	;;
	php-ext)
	php_ext
	;;
	sysctl)
	set_sysctl
	;;
	ntp)
	set_ntp
	;;
	memcached)
	install_memcached
	;;
	jdk)
	install_jdk
	;;
	tomcat)
	install_tomcat
	;;
	zabbix_agent)
	install_zabbix_agent
	;;
	set_rc_local)
	set_rc_local
	;;
	repo)
	install_repo
	;;
	*)
	echo "error flag!"
	;;
esac
